# ==========================================================
# -------------------------------------------
# IKEA STYRBAR remote control (E2001/E2002)
# -------------------------------------------
# Button -> action mapping
#  ---------------------------------------------------------
# | Icon                   | Action  | Exposed Action       |
# |---------------------------------------------------------|
# | Light large ( top )    | push    | on                   |
# | Light large ( top )    | hold    | brightness_move_up   |
# | Light large ( top )    | release | brightness_stop      |
# |---------------------------------------------------------|
# | Light small ( bottom ) | push    | off                  |
# | Light small ( bottom ) | hold    | brightness_move_down |
# | Light small ( bottom ) | release | brightness_stop      |
# |---------------------------------------------------------|
# | Arrow left             | push    | arrow_left_click     |
# | Arrow left             | hold    | arrow_left_hold      |
# | Arrow left             | release | arrow_left_release   |
# |---------------------------------------------------------|
# | Arrow right            | push    | arrow_right_click    |
# | Arrow right            | hold    | arrow_right_hold     |
# | Arrow right            | release | arrow_right_release  |
# |---------------------------------------------------------|
# | For the arrow buttons it seems that the hold/move       | 
# | action  takes a bit longer to be send.                  |
#  ---------------------------------------------------------
# Action (enum)
# The possible values are:
#  1. on
#  2. off
#  3. brightness_move_up
#  4. brightness_move_down
#  5. brightness_stop
#  6. arrow_left_click
#  7. arrow_left_hold
#  8. arrow_left_release
#  9. arrow_right_click
# 10. arrow_right_hold
# 11. arrow_right_release
# ==========================================================
# Blueprint Metadata
blueprint:
  name: z2m - IKEA STYRBAR remote control (E2001/E2002)
  author: yarafie
  domain: automation
  description: |

    This blueprint is for the IKEA STYRBAR square, 4-button remote when used with zigbee2mqtt.
    It is for general use so all buttons can be connected to any action of your choice.
    It also provides a looping action for any of the 4 buttons, when holding down a button (long press), which needs to be enabled in the blueprint.
    For the looping action during a long press, it will wait until it receives a release action.
    As a fail safe, looping will stop whenever the set loop count is reached or whenever the timeout for the wait is reached, both set in the blueprint.
    It also provides a virtual double press action for any of the 4 buttons, which needs to be enabled in the blueprint.

  homeassistant:
    min_version: 2024.10.0
  source_url: https://github.com/yarafie/HA-BluePrints/blob/main/z2m-IKEA-styrbar_E2001_E2002.yaml
#
# Define UI and default values
  input:
    # Device Selector
    remote_device:
      name: Styrbar Remote
      description: Select IKEA STYRBAR remote to use
      default: []
      selector:
        device:
          filter:
            # source: https://www.zigbee2mqtt.io/devices/E2001_E2002.html#ikea-e2001-e2002
            - integration: mqtt
              manufacturer: IKEA
              model: STYRBAR remote control
            # For backwards compatability with z2m 1.x. model_id is added to end of model rather than a seperate attribute in z2m 2.x
            - integration: mqtt
              manufacturer: IKEA
              model: STYRBAR remote control (E2001/E2002)
          multiple: false
    # Inputs for custom actions
    # Brightness Up/Down Buttons
    button_up_short:
      name: Brightness Up button - short press
      description: Action to run when SHORT press on Brightness Up button
      default: []
      selector:
        action: {}
    button_down_short:
      name: Brightness Down button - short press
      description: Action to run when SHORT press on Brightness Down button
      default: []
      selector:
        action: {}
    button_up_long:
      name: Brightness Up button - long press
      description: Action to run when LONG press on Brightness Up button
      default: []
      selector:
        action: {}
    button_down_long:
      name: Brightness Down button - long press
      description: Action to run when LONG press on Brightness Down button
      default: []
      selector:
        action: {}
    button_up_double:
      name: Brightness Up button - double press
      description: Action to run when DOUBLE press on Brightness Up button
      default: []
      selector:
        action: {}
    button_down_double:
      name: Brightness Down button - double press
      description: Action to run when DOUBLE press on Brightness Down button
      default: []
      selector:
        action: {}
    # The release action for the Brightness Up/Down buttons share one action since there is only one release trigger
    button_long_release:
      name: Brightness Up/Down button - long press released
      description: Action to run when LONG press on Brightness (Up or Down) button is released
      default: []
      selector:
        action: {}
    # Arrows Left/Right Buttons
    button_left_short:
      name: Left Arrow button - short press
      description: Action to run when SHORT press on LEFT arrow button
      default: []
      selector:
        action: {}
    button_left_long:
      name: Left Arrow button - long press
      description: Action to run when LONG press on LEFT arrow button
      default: []
      selector:
        action: {}
    button_left_double:
      name: Left Arrow button - double press
      description: Action to run when DOUBLE press on LEFT arrow button
      default: []
      selector:
        action: {}
    button_left_release:
      name: Left Arrow button - releaseed
      description: Action to run when RELEASE press on LEFT arrow button
      default: []
      selector:
        action: {}
    button_right_short:
      name: Right Arrow button - short press
      description: Action to run when SHORT press on RIGHT arrow button
      default: []
      selector:
        action: {}
    button_right_long:
      name: Right Arrow button - long press
      description: Action to run when LONG press on RIGHT arrow button
      default: []
      selector:
        action: {}
    button_right_double:
      name: Right Arrow button - double press
      description: Action to run when DOUBLE press on RIGHT arrow button
      default: []
      selector:
        action: {}
    button_right_release:
      name: Right Arrow button - released
      description: Action to run when RELEASE press on RIGHT arrow button
      default: []
      selector:
        action: {}
    # Inputs for looping custom actions on long button press actions until the corresponding release event is received
    long_press_options_section:
      name: (Optional) Long Press options
      icon: mdi:remote
      collapsed: true
      input:
        button_up_long_loop_enabled:
          name: Brightness Up button long press enable loop until release
          description: Loop the Up button action until the button is released.
          default: false
          selector:
            boolean:
        button_up_long_max_loop_repeats:
          name: Brightness Up button long press - Maximum loop repeats
          description: >-
            Maximum number of repeats for the custom action, when looping is enabled.
            Use it as a safety limit to prevent an endless loop in case the corresponding release event is not received.
          default: 25
          selector:
            number:
              min: 1.0
              max: 50.0
              mode: slider
              step: 1.0
        button_down_long_loop_enabled:
          name: Brightness Down button long press enable loop until release
          description: Loop the Down button action until the button is released.
          default: false
          selector:
            boolean:
        button_down_long_max_loop_repeats:
          name: Brightness Down button long press - Maximum loop repeats
          description: >-
            Maximum number of repeats for the custom action, when looping is enabled.
            Use it as a safety limit to prevent an endless loop in case the corresponding release event is not received.
          default: 25
          selector:
            number:
              min: 1.0
              max: 50.0
              mode: slider
              step: 1.0
        button_left_long_loop_enabled:
          name: Left Arrow button long press enable loop until release
          description: Loop the Left Arrow button action until the button is released.
          default: false
          selector:
            boolean:
        button_left_long_max_loop_repeats:
          name: Left Arrow button long press - Maximum loop repeats
          description: >-
            Maximum number of repeats for the custom action, when looping is enabled.
            Use it as a safety limit to prevent an endless loop in case the corresponding release event is not received.
          default: 25
          selector:
            number:
              min: 1.0
              max: 50.0
              mode: slider
              step: 1.0
        button_right_long_loop_enabled:
          name: Right Arrow button long press enable loop until release
          description: Loop the Right Arrow button action until the button is released.
          default: false
          selector:
            boolean:
        button_right_long_max_loop_repeats:
          name: Right Arrow button long press - Maximum loop repeats
          description: >-
            Maximum number of repeats for the custom action, when looping is enabled.
            Use it as a safety limit to prevent an endless loop in case the corresponding release event is not received.
          default: 25
          selector:
            number:
              min: 1.0
              max: 50.0
              mode: slider
              step: 1.0
        helper_long_press_timeout:
          name: (Optional) Helper - Long Press timeout in milliseconds
          description: >-
            Timeout for the custom long press action, when looping is enabled.
            Decrease this value if you notice that the long press action is not stopping.
            Increase this value if you notice that the long press action is stopping too early.
            Use it as safety limits to prevent an endless loop in case the corresponding release event is not received.
          default: 250
          selector:
            number:
              min: 100.0
              max: 5000.0
              unit_of_measurement: milliseconds
              mode: box
              step: 10.0
    # Inputs for enabling double press actions
    double_press_options_section:
      name: (Optional) Double Press options
      icon: mdi:remote
      collapsed: true
      input:
        button_up_double_press_enabled:
          name: Enable Brightness Up button double press
          description: >-
            Choose whether or not to enable the virtual double press action for the button.
            Turn this on if you are providing an action for the double press action.
          default: false
          selector:
            boolean:
        button_down_double_press_enabled:
          name: Enable Brightness Down button double press
          description: >-
            Choose whether or not to enable the virtual double press action for the button.
            Turn this on if you are providing an action for the double press action.
          default: false
          selector:
            boolean:
        button_left_double_press_enabled:
          name: Enable Left Arrow button double press
          description: >-
            Choose whether or not to enable the virtual double press action for the button.
            Turn this on if you are providing an action for the double press action.
          default: false
          selector:
            boolean:
        button_right_double_press_enabled:
          name: Enable Right Arrow button double press
            Choose whether or not to enable the virtual double press action for the button.
            Turn this on if you are providing an action for the double press action.
          default: false
          selector:
            boolean:
        # helper used to properly adjust the remote button double press actions
        helper_double_press_delay:
          name: Helper - Double Press delay in milliseconds
          description: >-
            Max delay between the first and the second button press for the double press action.
            Provide a value only if you are using a double press action.
            Increase/Decrease this value if you notice that the double press action is not triggered properly.
          default: 250
          selector:
            number:
              min: 100.0
              max: 5000.0
              unit_of_measurement: milliseconds
              mode: box
              step: 10.0
#
# Define mode for automatiom
mode: single
max_exceeded: silent
#
# Automation schema
variables:
  # Remote ID
  remote_device: !input remote_device
  # integration id used to select items in the action mapping
  # integration type is set from trigger.id
  integration_id: '{{ trigger.id.split("-")[0] }}'
  # convert input tags to variables, to be used in templates
  # Long Press Variables
  button_up_long_loop_enabled: !input button_up_long_loop_enabled
  button_up_long_max_loop_repeats: !input button_up_long_max_loop_repeats
  button_down_long_loop_enabled: !input button_down_long_loop_enabled
  button_down_long_max_loop_repeats: !input button_down_long_max_loop_repeats
  button_left_long_loop_enabled: !input button_left_long_loop_enabled
  button_left_long_max_loop_repeats: !input button_left_long_max_loop_repeats
  button_right_long_loop_enabled: !input button_right_long_loop_enabled
  button_right_long_max_loop_repeats: !input button_right_long_max_loop_repeats
  helper_long_press_timeout: !input helper_long_press_timeout
  # Button Inputs for Virtual Double Press
  button_up_double_press_exposed: !input button_up_double_press_exposed
  button_down_double_press_exposed: !input button_down_double_press_exposed
  button_left_double_press_exposed: !input button_left_double_press_exposed
  button_right_double_press_exposed: !input button_right_double_press_exposed
  helper_double_press_delay: !input helper_double_press_delay
#
# Define Triggers for automation
triggers:
# TOP AND BOTTOM BUTTONS
- trigger: device
  id: z2m-button-up-short
  domain: mqtt
  device_id: !input remote_device
  type: action
  subtype: 'on'
- trigger: device
  domain: mqtt
  device_id: !input remote_device
  type: action
  subtype: 'off'
- trigger: device
  id: z2m-button-up-long
  domain: mqtt
  device_id: !input remote_device
  type: action
  subtype: brightness_move_up
- trigger: device
  id: z2m-button-down-long
  domain: mqtt
  device_id: !input remote_device
  type: action
  subtype: brightness_move_down
# The release action for the Brightness Up/Down buttons share one action since there is only one release trigger
- trigger: device
  id: z2m-button-long-release
  domain: mqtt
  device_id: !input remote_device
  type: action
  subtype: brightness_stop
# ARROW LEFT BUTTON
- trigger: device
  id: z2m-button-left-short
  domain: mqtt
  device_id: !input remote_device
  type: action
  subtype: arrow_left_click
- trigger: device
  id: z2m-button-left-long
  domain: mqtt
  device_id: !input remote_device
  type: action
  subtype: arrow_left_hold
- trigger: device
  id: z2m-button-left-release
  domain: mqtt
  device_id: !input remote_device
  type: action
  subtype: arrow_left_release
# ARROW RIGHT BUTTON
- trigger: device
  id: z2m-button-right-short
  domain: mqtt
  device_id: !input remote_device
  type: action
  subtype: arrow_right_click
- trigger: device
  id: z2m-button-right-long
  domain: mqtt
  device_id: !input remote_device
  type: action
  subtype: arrow_right_hold
- trigger: device
  id: z2m-button-right-release
  domain: mqtt
  device_id: !input remote_device
  type: action
  subtype: arrow_right_release
#
# Conditions Block
conditions:
  - condition: and
    conditions:
      # check that the button event is not empty
      - >-
        {%- set trigger_action -%}
        {%- if integration_id == "z2m" -%}
        {{ trigger.payload }}
        {%- endif -%}
        {%- endset -%}
        {{ trigger_action not in ["","None","unknown"] }}
#
# Actions Block
actions:
  #
  # choose the sequence to run based on the received button event
  - choose:
      #
      # Actions for Up Button Single Press / Double Press Virtual
      - conditions:
          - condition: trigger
            id:
              - z2m-button-up-short
        sequence:
          # Check If Double Press is Exposed
          - if:
              - condition: template
                value_template: '{{ button_up_double_press_exposed }}'
            # Handle Up Double Press Event
            then:
              - choose:
                  # Wait for trigger for second Button Press to treat as a Double Press
                  - conditions: []
                    sequence:
                      - wait_for_trigger:
                          # z2m trigger for short press
                          - trigger: device
                            domain: mqtt
                            device_id: !input remote_device
                            type: action
                            subtype: 'on'
                        timeout:
                          milliseconds: '{{ helper_double_press_delay }}'
                        continue_on_timeout: true
                      # If a second button short press is triggered wait.trigger.idx will be defined
                      - if:
                          - condition: template
                            value_template: '{{ wait.trigger.idx is defined }}'
                        # Second short press trigger was received send Custom Action as a Double Press
                        then:
                          # Run the custom action
                          - choose:
                              - conditions: []
                                sequence: !input button_up_double
                        # Second short press trigger was not received send Custom Action as a Single Press
                        else:
                          # Run the Custom Action as a Single Press
                          - choose:
                              - conditions: []
                                sequence: !input button_up_short
            # Double Press is Not Exposed So Run Custom Action as a Single Press
            else:
              # Run the Custom Action as a Single Press
              - choose:
                  - conditions: []
                    sequence: !input button_up_short
      #
      # Actions for Down Button Single Press / Double Press Virtual
      - conditions:
          - condition: trigger
            id:
              - z2m-button-down-short
        sequence:
          # Check If Double Press is Exposed
          - if:
              - condition: template
                value_template: '{{ button_down_double_press_exposed }}'
            # Handle Down Double Press Event
            then:
              - choose:
                  # Wait for trigger for second Button Press to treat as a Double Press
                  - conditions: []
                    sequence:
                      - wait_for_trigger:
                          # z2m trigger for short press
                          - trigger: device
                            domain: mqtt
                            device_id: !input remote_device
                            type: action
                            subtype: 'off'
                        timeout:
                          milliseconds: '{{ helper_double_press_delay }}'
                        continue_on_timeout: true
                      # If a second button short press is triggered wait.trigger.idx will be defined
                      - if:
                          - condition: template
                            value_template: '{{ wait.trigger.idx is defined }}'
                        # Second short press trigger was received send Custom Action as a Double Press
                        then:
                          # Run the custom action
                          - choose:
                              - conditions: []
                                sequence: !input button_down_double
                        # Second short press trigger was not received send Custom Action as a Single Press
                        else:
                          # Run the Custom Action as a Single Press
                          - choose:
                              - conditions: []
                                sequence: !input button_down_short
            # Double Press is Not Exposed So Run Custom Action as a Single Press
            else:
              # Run the Custom Action as a Single Press
              - choose:
                  - conditions: []
                    sequence: !input button_down_short
      #
      # Actions for left Button Single Press / Double Press Virtual
      - conditions:
          - condition: trigger
            id:
              - z2m-button-left-short
        sequence:
          # Check If Double Press is Exposed
          - if:
              - condition: template
                value_template: '{{ button_left_double_press_exposed }}'
            # Handle left Double Press Event
            then:
              - choose:
                  # Wait for trigger for second Button Press to treat as a Double Press
                  - conditions: []
                    sequence:
                      - wait_for_trigger:
                          # z2m trigger for short press
                          - trigger: device
                            domain: mqtt
                            device_id: !input remote_device
                            type: action
                            subtype: arrow_left_click
                        timeout:
                          milliseconds: '{{ helper_double_press_delay }}'
                        continue_on_timeout: true
                      # If a second button short press is triggered wait.trigger.idx will be defined
                      - if:
                          - condition: template
                            value_template: '{{ wait.trigger.idx is defined }}'
                        # Second short press trigger was received send Custom Action as a Double Press
                        then:
                          # Run the custom action
                          - choose:
                              - conditions: []
                                sequence: !input button_left_double
                        # Second short press trigger was not received send Custom Action as a Single Press
                        else:
                          # Run the Custom Action as a Single Press
                          - choose:
                              - conditions: []
                                sequence: !input button_left_short
            # Double Press is Not Exposed So Run Custom Action as a Single Press
            else:
              # Run the Custom Action as a Single Press
              - choose:
                  - conditions: []
                    sequence: !input button_left_short
      #
      # Actions for right Button Single Press / Double Press Virtual
      - conditions:
          - condition: trigger
            id:
              - z2m-button-right-short
        sequence:
          # Check If Double Press is Exposed
          - if:
              - condition: template
                value_template: '{{ button_right_double_press_exposed }}'
            # Handle right Double Press Event
            then:
              - choose:
                  # Wait for trigger for second Button Press to treat as a Double Press
                  - conditions: []
                    sequence:
                      - wait_for_trigger:
                          # z2m trigger for short press
                          - trigger: device
                            domain: mqtt
                            device_id: !input remote_device
                            type: action
                            subtype: arrow_right_click
                        timeout:
                          milliseconds: '{{ helper_double_press_delay }}'
                        continue_on_timeout: true
                      # If a second button short press is triggered wait.trigger.idx will be defined
                      - if:
                          - condition: template
                            value_template: '{{ wait.trigger.idx is defined }}'
                        # Second short press trigger was received send Custom Action as a Double Press
                        then:
                          # Run the custom action
                          - choose:
                              - conditions: []
                                sequence: !input button_right_double
                        # Second short press trigger was not received send Custom Action as a Single Press
                        else:
                          # Run the Custom Action as a Single Press
                          - choose:
                              - conditions: []
                                sequence: !input button_right_short
            # Double Press is Not Exposed So Run Custom Action as a Single Press
            else:
              # Run the Custom Action as a Single Press
              - choose:
                  - conditions: []
                    sequence: !input button_right_short
      #
      # Actions for Up Button Long Press
      - conditions:
          - condition: trigger
            id:
              - z2m-button-up-long
        sequence:
          # Run the custom action only once before entering repeat
          - choose:
              - conditions: []
                sequence: !input button_up_long
          # Handle custom action looping if looping is enabled
          - choose:
              - conditions: '{{ button_up_long_loop_enabled }}'
                sequence:
                  # Repeat the Long Press Actions for the set number of loops
                  - repeat:
                      count: !input button_up_long_max_loop_repeats
                      sequence:
                        - parallel:
                            - sequence: !input button_up_long
                            - sequence:
                                - choose:
                                    - conditions: []
                                      sequence:
                                        # Wait for trigger for Button Long Press Release to stop looping
                                        - wait_for_trigger:
                                            # z2m triggers
                                            - trigger: device
                                              domain: mqtt
                                              device_id: !input controller_device
                                              type: action
                                              subtype: brightness_stop
                                          timeout:
                                            milliseconds: !input helper_long_press_timeout
                                          continue_on_timeout: true
                                        # If a Button Long Release is triggered wait.trigger.idx will be defined stop the loop before long_max_loop_repeats
                                        - if:
                                            - condition: template
                                              value_template: '{{ wait.trigger.idx is defined }}'
                                          then:
                                            - stop: button_up_released
      #
      # Actions for Down Button Long Press
      - conditions:
          - condition: trigger
            id:
              - z2m-button-down-long
        sequence:
          # Run the custom action only once before entering repeat
          - choose:
              - conditions: []
                sequence: !input button_down_long
          # Handle custom action looping if looping is enabled
          - choose:
              - conditions: '{{ button_down_long_loop_enabled }}'
                sequence:
                  # Repeat the Long Press Actions for the set number of loops
                  - repeat:
                      count: !input button_down_long_max_loop_repeats
                      sequence:
                        - parallel:
                            - sequence: !input button_down_long
                            - sequence:
                                - choose:
                                    - conditions: []
                                      sequence:
                                        # Wait for trigger for Button Long Press Release to stop looping
                                        - wait_for_trigger:
                                            # z2m triggers
                                            - trigger: device
                                              domain: mqtt
                                              device_id: !input controller_device
                                              type: action
                                              subtype: brightness_stop
                                          timeout:
                                            milliseconds: !input helper_long_press_timeout
                                          continue_on_timeout: true
                                        # If a Button Long Release is triggered wait.trigger.idx will be defined stop the loop before long_max_loop_repeats
                                        - if:
                                            - condition: template
                                              value_template: '{{ wait.trigger.idx is defined }}'
                                          then:
                                            - stop: button_down_released
      #
      # Actions for Left Button Long Press
      - conditions:
          - condition: trigger
            id:
              - z2m-button-left-long
        sequence:
          # Run the custom action only once before entering repeat
          - choose:
              - conditions: []
                sequence: !input button_left_long
          # Handle custom action looping if looping is enabled
          - choose:
              - conditions: '{{ button_left_long_loop_enabled }}'
                sequence:
                  # Repeat the Long Press Actions for the set number of loops
                  - repeat:
                      count: !input button_left_long_max_loop_repeats
                      sequence:
                        - parallel:
                            - sequence: !input button_left_long
                            - sequence:
                                - choose:
                                    - conditions: []
                                      sequence:
                                        # Wait for trigger for Button Long Press Release to stop looping
                                        - wait_for_trigger:
                                            # z2m triggers
                                            - trigger: device
                                              domain: mqtt
                                              device_id: !input controller_device
                                              type: action
                                              subtype: arrow_left_release
                                          timeout:
                                            milliseconds: !input helper_long_press_timeout
                                          continue_on_timeout: true
                                        # If a Button Long Release is triggered wait.trigger.idx will be defined stop the loop before long_max_loop_repeats
                                        - if:
                                            - condition: template
                                              value_template: '{{ wait.trigger.idx is defined }}'
                                          then:
                                            - stop: button_left_released

      #
      # Actions for Right Button Long Press
      - conditions:
          - condition: trigger
            id:
              - z2m-button-right-long
        sequence:
          # Run the custom action only once before entering repeat
          - choose:
              - conditions: []
                sequence: !input button_right_long
          # Handle custom action looping if looping is enabled
          - choose:
              - conditions: '{{ button_right_long_loop_enabled }}'
                sequence:
                  # Repeat the Long Press Actions for the set number of loops
                  - repeat:
                      count: !input button_right_long_max_loop_repeats
                      sequence:
                        - parallel:
                            - sequence: !input button_right_long
                            - sequence:
                                - choose:
                                    - conditions: []
                                      sequence:
                                        # Wait for trigger for Button Long Press Release to stop looping
                                        - wait_for_trigger:
                                            # z2m triggers
                                            - trigger: device
                                              domain: mqtt
                                              device_id: !input controller_device
                                              type: action
                                              subtype: arrow_right_release
                                          timeout:
                                            milliseconds: !input helper_long_press_timeout
                                          continue_on_timeout: true
                                        # If a Button Long Release is triggered wait.trigger.idx will be defined stop the loop before long_max_loop_repeats
                                        - if:
                                            - condition: template
                                              value_template: '{{ wait.trigger.idx is defined }}'
                                          then:
                                            - stop: button_right_released

      #
      # Actions for Up/Down Button long press released
      - conditions:
          - condition: trigger
            id:
              - z2m-button-long-release
        sequence:
          # run the custom action
          - choose:
              - conditions: []
                sequence: !input button_long_release
      #
      # Actions for Left Button long press released
      - conditions:
          - condition: trigger
            id:
              - z2m-button-left-release
        sequence:
          # run the custom action
          - choose:
              - conditions: []
                sequence: !input button_left_release
      #
      # Actions for Right Button long press released
      - conditions:
          - condition: trigger
            id:
              - z2m-button-right-release
        sequence:
          # run the custom action
          - choose:
              - conditions: []
                sequence: !input button_right_release
